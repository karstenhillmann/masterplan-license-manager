openapi: 3.0.3

info:
  title: Masterplan License Manager
  description: |-
    Masterplan License Manager: Docker deployable REST API server with MongoDB database, simplifying software license management

  contact:
    email: info@aseko.de
  license:
    name:  ASEKO license
    url: https://aseko.de
  version: 1.1.0
externalDocs:
  description: Find out more about aseko
  url: https://www.aseko.de

tags:
  - name: no access control
    description: No authentication required
  - name: client
    description: This can be accessed by the client password or higher
  - name: manager
    description: This can be accessed by the manager password or higher
  - name: admin
    description: This can be accessed by the admin password

paths:

  /:
    get:
      tags:
        - no access control
      summary: Landing page
      description: Redirects you to the docs route
      responses:
        '200':
          description: Successful redirection

  /api/v1/docs:
    get:
      tags:
        - no access control
      summary: Documentation for the API
      description: What you are looking at right now
      responses:
        '200':
          description: Loaded the documentation webpage

  /api/v1/validate:
    get:
      security:
        - BasicAuthentication: []
      tags:
        - client
      summary: Checks and provides details for an existing license
      description: This can be used to validate a license from the database
      parameters:
        - in: query
          name: _id
          required: true
          schema:
            type: string
            example: 'f12a10dac17d920d53676c8f06beabcc'
          description: Provide with the license ID to get details from the database
      responses:
        '200':
          description: Found the license in the database and license is valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateResponseValid'
        '202':
          description: Found the license in the database and license is expired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateResponseExpired'
        '404':
          description: Unable to find a license with _id

  /api/v1/create:
    post:
      security:
        - BasicAuthentication: []
      tags:
        - manager
      summary: Generates unique license
      description: This can be used to create a new unique license
      requestBody:
        $ref: '#/components/requestBodies/CreatePayload'
      responses:
        '200':
          description: Created a new license
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateResponse'
        '404':
          description: Missing one or more of the "REQUIRED_CREATE" key(s) AND/OR "length" key in the json request
        '406':
          description: /api/v1/create requires a JSON payload
  /api/v1/renew:
    patch:
      security:
        - BasicAuthentication: []
      tags:
        - manager
      summary: Extends license validity
      description: This can be used to renew the validity of a license
      requestBody:
        $ref: '#/components/requestBodies/RenewPayload'
      responses:
        '200':
          description: Renewed the license
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenewResponse'
        '404':
          description: Unable to find a license with _id
        '406':
          description: /api/v1/renew requires a JSON payload
  /api/v1/get-all:
    get:
      security:
        - BasicAuthentication: []
      tags:
        - admin
      summary: Retrieves all license details in JSON
      description: This can be used to get all the license details from the database
      responses:
        '200':
          description: Successfully retrieved the licenses
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllResponse'
        '404':
          description: Unable to retrieve the licenses

components:

  schemas:
    LicenseDetails:
      type: object
      properties:
        _id:
          type: string
          example: 'f12a10dac17d920d53676c8f06beabcc'
        company:
          type: string
          example: 'ASEKO GmbH'
        created:
          type: string
          example: '2023-09-29'
        email:
          type: string
          example: 'info@aseko.de'
        expiry:
          type: string
          example: '2025-09-17'
        machine-node:
          type: string
          example: 'Super-Laptop'
        machine-sn:
          type: number
          example: 91080384
        name:
          type: string
          example: 'Im Heidkampe 36'
        product:
          type: string
          example: 'Enterprise License'
        renew_count:
          type: number
          example: 1
    ValidateResponseValid:
      type: object
      properties:
        message:
          type: string
          example: "License is valid"
        license-details:
          $ref: '#/components/schemas/LicenseDetails'
    ValidateResponseExpired:
      type: object
      properties:
        message:
          type: string
          example: "License is expired"
        license-details:
          $ref: '#/components/schemas/LicenseDetails'
    GetAllResponse:
      type: object
      properties:
        license-database:
          type: array
          items:
            $ref: '#/components/schemas/LicenseDetails'
    RenewResponse:
      type: object
      properties:
        message:
          type: string
          example: 'Renewed the license'
    CreatePayload:
      required:
        - length
      type: object
      properties:
        name:
          type: string
          example: "Mustermann"
        email:
          type: string
          example: "info@aseko.de"
        company:
          type: string
          example: "ASEKO GmbH"
        product:
          type: string
          example: 'Enterprise License'
        length:
          type: number
          example: 365
        machine-node:
          type: string
          example: 'Super-Laptop'
        machine-sn:
          type: number
          example: 91080384
    RenewPayload:
      required:
        - _id
        - length
      properties:
        _id:
          type: string
          example: 'f12a10dac17d920d53676c8f06beabcc'
        length:
          type: number
          example: 365
  requestBodies:
    CreatePayload:
      description: Provide a payload with the length (in days) of license you want to create and all the REQUIRED_CREATE fields used when creating this project
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreatePayload'
    RenewPayload:
      description: Provide a payload with the length (in days) of license you want to renew starting from today and the license ID
      required: true
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RenewPayload'

  securitySchemes:
    BasicAuthentication:
      type: http
      scheme: basic
